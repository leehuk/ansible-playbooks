- name: Disable NetworkManager
  service:
    name: NetworkManager
    enabled: no
    state: stopped
  when: core_network.devices is defined

- name: Disable NetworkManager-wait-online
  service:
    name: NetworkManager-wait-online
    enabled: no
    state: stopped
  when: core_network.devices is defined

- name: Install device configuration
  template:
    src: redhat/device.j2
    dest: /etc/sysconfig/network-scripts/ifcfg-{{ item.device }}
  with_items:
    - "{{ core_network.devices }}"
  register: network_devices
  when: core_network.devices is defined

- name: Install ipv4 route configuration
  template:
    src: redhat/route.j2
    dest: /etc/sysconfig/network-scripts/route-{{ item.device }}
  with_items:
    - "{{ core_network.routes4 }}"
  register: network_routes4
  when: core_network.routes4 is defined

- name: Install ipv6 route configuration
  template:
    src: redhat/route.j2
    dest: /etc/sysconfig/network-scripts/route6-{{ item.device }}
  with_items:
    - "{{ core_network.routes6 }}"
  register: network_routes6
  when: core_network.routes6 is defined

- name: Install dns configuration
  template:
    src: generic/resolv.conf.j2
    dest: /etc/resolv.conf
  with_items:
    - "{{ core_network.dns }}"
  when: core_network.dns is defined

- name: Install hostname configuration
  copy:
    content: "{{ core_network.hostname }}\n"
    dest: "/etc/hostname"
  when: core_network.hostname is defined

#- name: Determining managed network configuration files
#  set_fact:
#    network_files_managed: "{{ network_bridges.results|default([])|getkeys_or(['path','dest']) + network_devices.results|default([])|getkeys_or(['path','dest']) + network_routes4.results|default([])|getkeys_or(['path','dest']) + network_routes6.results|default([])|getkeys_or(['path','dest']) + ['/etc/sysconfig/network-scripts/ifcfg-lo'] }}"
#
#- name: Determining existing network configuration files
#  shell: find /etc/sysconfig/network-scripts -type f -name ifcfg\* -o -name route\*
#  changed_when: false
#  register: network_files_all
#
#- name: Removing unmanaged network configuration files
#  file:
#    path: "{{ item }}"
#    state: absent
#  with_items:
#    - "{{ network_files_all.stdout_lines }}"
#  when: item not in network_files_managed
